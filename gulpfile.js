// Generated by CoffeeScript 1.8.0
(function() {
  var connect, gulp, sass;

  gulp = require('gulp');

  sass = require('gulp-sass');

  connect = require('gulp-connect');

  gulp.task('server', function() {
    return connect.server({
      root: 'dist',
      livereload: true
    });
  });

  gulp.task('hello', function() {
    return console.log("hello");
  });

  gulp.task('copy-index', function() {
    return gulp.src('index.html').pipe(gulp.dest('dist')).pipe(connect.reload());
  });

  gulp.task('images', function() {
    return gulp.src('images/*.jpg').pipe(gulp.dest('dist/images'));
  });

  gulp.task('image-extend', function() {
    return gulp.src('images/*.{jpg,gif}').pipe(gulp.dest('dist/images'));
  });

  gulp.task('data', function() {
    return gulp.src(['xml/*.xml', 'json/*.json', '!json/select-*.json']).pipe(gulp.dest('dist/data'));
  });

  gulp.task('bulid', ['hello', 'images', 'data'], function() {
    return console.log("all do");
  });

  gulp.task('watch', function() {
    gulp.watch('index.html', ['copy-index']);
    gulp.watch('images/**/*.{jpg,gif}', ['images']);
    return gulp.watch(['xml/*.xml', 'json/*.json', '!json.select-*.json'], ['data']);
  });

  gulp.task('sass', function() {
    return gulp.src('stylesheets/**/*.scss').pipe(sass()).pipe(gulp.dest('dist/css'));
  });

  gulp.task('default', ['server', 'watch']);

}).call(this);

//# sourceMappingURL=gulpfile.js.map
